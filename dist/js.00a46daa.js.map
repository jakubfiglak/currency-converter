{"version":3,"sources":["js/currencies.js","js/api.js","js/convert.js","js/index.js"],"names":["currencies","USD","AUD","BGN","BRL","CAD","CHF","CNY","CZK","DKK","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","ZAR","EUR","generateOptions","Object","entries","map","currencyCode","currencyName","join","formatCurrency","amount","currency","Intl","NumberFormat","style","format","endpoint","getRatesByBase","base","res","fetch","rates","json","ratesByBase","convert","from","to","console","log","rate","converted","fromSelect","document","querySelector","toSelect","ratesSelect","amountInput","amountOutput","form","html","innerHTML","displayData","value","formatted","textContent","addEventListener"],"mappings":";;AGAA;;AACA;;AFDA,ADAA,AGEA,MFFMgD,ADAAhD,QCAQ,EDAE,CCAC,EDAE,sCCAnB;ACAA,AFCEC,EAAAA,GAAG,EAAE,sBADY;ACEJ,ADAbC,EAAAA,GAAG,EAAE,QCAuB+C,WDFX,GCEJ,CAA8BC,IAA9B,EAAoC;AACjD,ADAA/C,EAAAA,GAAG,EAAE,CCACgD,GAAG,GAAG,MAAMC,EDHD,GCGM,CAAE,GAAEJ,QAAS,SAAQE,IAAK,EAA1B,CAAvB;AACA,ADAA9C,AGAF,EHAEA,GAAG,CGAC2D,CHAC,CCACV,KAAK,GAAG,AEAA,GAAGW,GFAGb,CDJH,ECIM,CAACG,CEAC,CAACW,EFAN,EAApB,SEAiB,CAAuB,gBAAvB,CAAnB;AFCE,ACHF,AFGE5D,AGAF,EHAEA,GAAG,CEHCkD,ACGAW,CHAC,ECAEb,KAAP,AEAY,GDHG,ACGAW,GDHG,EAApB,EFFmB,CGKM,CAACC,aAAT,CAAuB,cAAvB,CAAjB;AFCC,ADAC3D,AGAF,EHAEA,GAAG,CGAC6D,CHAC,UGAU,GHNE,AGMCH,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAApB;ADFe,AFGb1D,AGAF,EHAEA,GAAG,CGAC6D,CHAC,QEHuBZ,ECGb,GAAGQ,CHPD,CEIJ,CAAuBtB,KCGV,CDHb,ACGcuB,EDHiBR,IAA/B,EAAqCC,EAArC,EAAyC,CCGpC,CAAuB,eAAvB,CAApB;ADFE,AFGAlD,AGAF,EHAEA,GAAG,CEHC,ACGA6D,CDHCd,AFGA,WEHW,ACGA,CDHCE,ECGEO,EDHH,CAAhB,EAAwB,GCGG,CHRV,AGQWC,aAAT,CAAuB,gBAAvB,CAArB;ADFIN,AFGFlD,AGAF,EHAEA,EEHEkD,CFGC,CGACW,CHAC,GGAG,CDHC,CAACV,CCGCI,EDHT,CAAa,KFNE,AGSE,CAACC,aAAT,CAAuB,YAAvB,CAAb,2BDHI;AACA,AFGFvD,AGCF,EHDEA,GAAG,EAAE,GEHG2C,KAAK,GAAG,ACIH,KAAf,CDJwB,OFPL,WEOoBI,IAAf,CAApB;AACAF,AFGF5C,AGCF,EHDEA,EEHE4C,CFGC,CGCCgB,CHDC,GGCG,GAAG,EDJE,CAACd,IAAD,CAAX,GAAoBJ,CFRL,IEQf,kBCIJ;ADHIM,AFGF/C,AGCFmD,EHDEnD,EEHE+C,CFGC,EAAE,GGCG,CDJC,ACIAa,CDJCZ,GAAR,CAAYL,ICIhB,EHbmB,CGaIgB,IDJnB,ACIJ;ADHG,AFGD1D,AGCFqD,EHDErD,GAAG,EAAE,CGCC,CAAC2D,SAAT,GAAqBD,IHdF,AGcnB;AHAEzD,AGCFqD,EHDErD,GAAG,EAAE,IGCI,CAAC0D,SAAZ,GAAwBD,EHfL,EGenB;ADHE,AFGAxD,EAAAA,GAAG,EAAE,CEHC8C,IAAI,GAAGN,WAAW,CAACE,AFZR,IEYO,CAAX,CAAkBJ,KAAlB,CAAwBK,EAAxB,CAAb;AACA,AFGA1C,AGCF,EHDEA,GAAG,CGCCyD,CHDC,CEHCX,SAAS,ACIA,GDJGpB,ACIA,CHjBD,KEaO,GAAGmB,GCIG,CDJ9B;AACAF,AFGA1C,AGCA,EDJA0C,AFGA1C,GAAG,EAAE,CGCCyD,CDJC,CAACd,GAAR,ACIW,CDJE,ECIC,CDJClB,KCIK,CDJE,CFdL,MEcWe,IAAK,OAAMK,GCKrCM,MDL+C,KCKpC,CAACM,CDLyChB,EAAG,EAA1D,ACIoB,EAElBK,UAAU,CAACW,KAFO,EAGlBR,QAAQ,CAACQ,KAHS,CAApB;ADHA,AFGAxD,AGKA,EHLAA,GAAG,EAAE,CGKCyD,CDRCjC,MAAM,ECQE,CDRCmB,ECQE,CHvBD,CEejB,8BCQiCa,KAAf,EAAsBR,QAAQ,CAACQ,KAA/B,CAAlB;ADPD,AFGCvD,AGKAwC,EHLAxC,AGKAwC,GHLG,EAAE,EGKE,CAACC,GAAR,CAAYe,SAAZ,EHxBiB;AAoBjBvD,AGKAiD,EHLAjD,AGKAiD,GHLG,EAAE,OGKO,CAACO,MHzBI,KGyBjB,GAA4B,GAAED,SAAU,EAAxC;AHJAtD,AGKD,CATD,CHIEA,GAAG,EAAE,mBArBY;AAsBjBC,EAAAA,GAAG,EAAE,iBAtBY;AAuBjBC,AGKF+C,EHLE/C,EGKE,CHLC,AGKAsD,EHLE,cGKP,CAAsB,KH5BH,EG4BnB,EAA+BJ,WAA/B;AHJEjD,EAAAA,GAAG,EAAE,iBAxBY;AAyBjBC,EAAAA,GAAG,EAAE,cAzBY;AA0BjBC,EAAAA,GAAG,EAAE,cA1BY;AA2BjBC,EAAAA,GAAG,EAAE,eA3BY;AA4BjBC,EAAAA,GAAG,EAAE,eA5BY;AA6BjBC,EAAAA,GAAG,EAAE,kBA7BY;AA8BjBC,EAAAA,GAAG,EAAE,WA9BY;AA+BjBC,EAAAA,GAAG,EAAE,cA/BY;AAgCjBC,EAAAA,GAAG,EAAE,oBAhCY;AAiCjBC,EAAAA,GAAG,EAAE;AAjCY,CAAnB;;AAoCO,MAAMC,eAAe,GAAG,MAC7BC,MAAM,CAACC,OAAP,CAAepC,UAAf,EACGqC,GADH,CAEI,CAAC,CAACC,YAAD,EAAeC,YAAf,CAAD,KACG,kBAAiBD,YAAa,KAAIA,YAAa,MAAKC,YAAa,WAHxE,EAKGC,IALH,CAKQ,EALR,CADK;;;;AAQA,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,QAAT,KAC5BC,IAAI,CAACC,YAAL,CAAkB,OAAlB,EAA2B;AACzBC,EAAAA,KAAK,EAAE,UADkB;AAEzBH,EAAAA;AAFyB,CAA3B,EAGGI,MAHH,CAGUL,MAHV,CADK","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["const currencies = {\r\n  USD: 'United States Dollar',\r\n  AUD: 'Australian Dollar',\r\n  BGN: 'Bulgarian Lev',\r\n  BRL: 'Brazilian Real',\r\n  CAD: 'Canadian Dollar',\r\n  CHF: 'Swiss Franc',\r\n  CNY: 'Chinese Yuan',\r\n  CZK: 'Czech Republic Koruna',\r\n  DKK: 'Danish Krone',\r\n  GBP: 'British Pound Sterling',\r\n  HKD: 'Hong Kong Dollar',\r\n  HRK: 'Croatian Kuna',\r\n  HUF: 'Hungarian Forint',\r\n  IDR: 'Indonesian Rupiah',\r\n  ILS: 'Israeli New Sheqel',\r\n  INR: 'Indian Rupee',\r\n  ISK: 'Icelandic Krona',\r\n  JPY: 'Japanese Yen',\r\n  KRW: 'South Korean Won',\r\n  MXN: 'Mexican Peso',\r\n  MYR: 'Malaysian Ringgit',\r\n  NOK: 'Norwegian Krone',\r\n  NZD: 'New Zealand Dollar',\r\n  PHP: 'Philippine Peso',\r\n  PLN: 'Polish Zloty',\r\n  RON: 'Romanian Leu',\r\n  RUB: 'Russian Ruble',\r\n  SEK: 'Swedish Krona',\r\n  SGD: 'Singapore Dollar',\r\n  THB: 'Thai Baht',\r\n  TRY: 'Turkish Lira',\r\n  ZAR: 'South African Rand',\r\n  EUR: 'Euro',\r\n};\r\n\r\nexport const generateOptions = () =>\r\n  Object.entries(currencies)\r\n    .map(\r\n      ([currencyCode, currencyName]) =>\r\n        `<option value=\"${currencyCode}\">${currencyCode} - ${currencyName}</option>`\r\n    )\r\n    .join('');\r\n\r\nexport const formatCurrency = (amount, currency) =>\r\n  Intl.NumberFormat('en-EN', {\r\n    style: 'currency',\r\n    currency,\r\n  }).format(amount);\r\n","const endpoint = 'https://api.exchangeratesapi.io/latest';\r\n\r\nexport default async function getRatesByBase(base) {\r\n  const res = await fetch(`${endpoint}?base=${base}`);\r\n  const rates = await res.json();\r\n  return rates;\r\n}\r\n","import getRatesByBase from './api';\r\n\r\nconst ratesByBase = {};\r\n\r\nexport default async function convert(amount, from, to) {\r\n  if (!ratesByBase[from]) {\r\n    console.log(`we don't have rates for this currency, I have to fetch it!`);\r\n    const rates = await getRatesByBase(from);\r\n    ratesByBase[from] = rates;\r\n    console.log(ratesByBase);\r\n  }\r\n\r\n  const rate = ratesByBase[from].rates[to];\r\n  const converted = amount * rate;\r\n  console.log(`${amount} in ${from} is ${converted} in ${to}`);\r\n  return amount * rate;\r\n}\r\n","import { generateOptions, formatCurrency } from './currencies';\r\nimport getRatesByBase from './api';\r\nimport convert from './convert';\r\n\r\nconst fromSelect = document.querySelector('#from-currency');\r\nconst toSelect = document.querySelector('#to-currency');\r\nconst ratesSelect = document.querySelector('#currency');\r\nconst amountInput = document.querySelector('#amount-input');\r\nconst amountOutput = document.querySelector('#amount-output');\r\nconst form = document.querySelector('.converter');\r\n\r\ngetRatesByBase('PLN');\r\nconst html = generateOptions();\r\nfromSelect.innerHTML = html;\r\ntoSelect.innerHTML = html;\r\nratesSelect.innerHTML = html;\r\n\r\nconst displayData = async () => {\r\n  const value = await convert(\r\n    amountInput.value,\r\n    fromSelect.value,\r\n    toSelect.value\r\n  );\r\n  const formatted = formatCurrency(value, toSelect.value);\r\n  console.log(formatted);\r\n  amountOutput.textContent = `${formatted}`;\r\n};\r\n\r\nform.addEventListener('input', displayData);\r\n"]}