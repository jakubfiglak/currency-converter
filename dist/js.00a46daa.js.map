{"version":3,"sources":["js/currencies.js","js/api.js","js/convert.js","js/index.js"],"names":["currencies","USD","AUD","BGN","BRL","CAD","CHF","CNY","CZK","DKK","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","ZAR","EUR","generateOptions","Object","entries","map","currencyCode","currencyName","join","formatCurrency","amount","currency","Intl","NumberFormat","style","format","endpoint","getRatesByBase","base","res","fetch","rates","json","ratesByBase","convert","from","to","console","log","rate","converted","fromSelect","document","querySelector","toSelect","amountInput","amountOutput","form","html","innerHTML","displayData","value","formatted","textContent","addEventListener"],"mappings":";;AGAA;;AACA;;AFDA,ADAA,AGEA,MFFMgD,ADAAhD,QCAQ,EDAE,CCAC,EDAE,sCCAnB;ACAA,AFCEC,EAAAA,GAAG,EAAE,sBADY;ACEJ,ADAbC,EAAAA,GAAG,EAAE,QCAuB+C,WDFX,GCEJ,CAA8BC,IAA9B,EAAoC;AACjD,ADAA/C,EAAAA,GAAG,EAAE,CCACgD,GAAG,GAAG,MAAMC,EDHD,GCGM,CAAE,GAAEJ,QAAS,SAAQE,IAAK,EAA1B,CAAvB;AACA,ADAA9C,AGAF,EHAEA,GAAG,CGAC2D,CHAC,CCACV,KAAK,GAAG,AEAA,GAAGW,GFAGb,CDJH,ECIM,CAACG,CEAC,CAACW,EFAN,EAApB,SEAiB,CAAuB,gBAAvB,CAAnB;AFCE,ACHF,AFGE5D,AGAF,EHAEA,GAAG,CEHCkD,ACGAW,CHAC,ECAEb,KAAP,AEAY,GDHG,ACGAW,GDHG,EAApB,EFFmB,CGKM,CAACC,aAAT,CAAuB,cAAvB,CAAjB;AFCC,ADAC3D,AGAF,EHAEA,GAAG,CGAC6D,CHAC,UGAU,GHNE,AGMCH,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAApB;ADFe,AFGb1D,AGAF,EHAEA,GAAG,CGAC6D,CHAC,QEHuBZ,GCGZ,GHPC,AGOEQ,CDHN,CAAuBtB,MAAvB,ACGc,CAACuB,CDHgBR,IAA/B,EAAqCC,EAArC,EAAyC,ECGnC,CAAuB,gBAAvB,CAArB;ADFE,AFGAlD,AGAF,EHAEA,GAAG,CEHC,ACGA6D,CDHCd,AFGA,GGAG,GAAGS,KDHK,CAACP,ECGE,CAACQ,CDHJ,CAAhB,EAAwB,IFLP,KGQN,CAAuB,YAAvB,CAAb;ADFIN,AFGFlD,AGCF,EHDEA,EEHEkD,CFGC,EAAE,IEHI,CAACC,GAAR,CAAa,ECIF,GHVI,EGUnB,qDDJI;AACA,AFGFlD,AGCF,EHDEA,GAAG,CGCC4D,CHDC,GEHGjB,ACIA,GAAG,EDJE,GAAG,MAAM,OFPL,WEOoBI,IAAf,CAApB,ACIJ;ADHIF,AFGF5C,AGCFoD,EHDEpD,EEHE4C,CFGC,EAAE,GGCG,CAACgB,IDJI,CAACd,IAAD,ACIf,CDJI,ECImBa,CDJCjB,CFRL,EGYnB,EDJI;AACAM,AFGF/C,AGCFsD,EHDEtD,EEHE+C,CFGC,EAAE,CGCC,CAACY,EDJE,CAACX,GAAR,CAAYL,ECIhB,GAAqBe,CHbF,GGanB,EDJI;AACD,AFGDzD,EAAAA,GAAG,EAAE,kBAbY;AAcjBC,AGCF,EHDEA,GAAG,CGCC0D,CHDC,UGCU,GAAG,MHfD,MGea;ADH9B,AFGAzD,AGCA,EHDAA,GAAG,EAAE,CEHC8C,ACIAY,IDJI,CCIC,EDJElB,CCIC,MAAM,IDJI,CAACE,AFZR,IEYO,CAAX,CAAkBJ,KAAlB,CAAwBK,EAAxB,CAAb,ECKES,WAAW,CAACM,KADM,EAElBV,UAAU,CAACU,KAFO,EAGlBP,QAAQ,CAACO,KAHS,CAApB;ADHA,AFGAzD,AGKA,EHLAA,GAAG,EAAE,CEHC8C,ACQAY,SDRS,ACQA,GDRGhC,ACQA,CHrBD,KEaO,GAAGmB,IAA3B,mBCQiCY,KAAf,EAAsBP,QAAQ,CAACO,KAA/B,CAAlB;ADPAd,AFGA1C,AGKA0C,EDRAA,AFGA1C,AGKA0C,GHLG,EAAE,EEHE,ACQA,CDRCC,ACQAA,GDRR,ACQA,CDRa,ACQDc,GDRGhC,MAAO,ACQtB,CHtBiB,MEcWe,IAAK,OAAMK,SAAU,OAAMJ,EAAG,EAA1D;AACA,AFGAxC,AGKAkD,EHLAlD,AGKAkD,GHLG,EAAE,EEHE1B,KCQK,CDRC,ACQAiC,GDRGd,GFfC,CEejB,ICQA,GAA4B,GAAEa,SAAU,EAAxC;ADPD,AFGCvD,AGKD,CATD,CHIEA,GAAG,EAAE,kBAnBY;AAoBjBC,EAAAA,GAAG,EAAE,cApBY;AAqBjBC,AGKFgD,EHLEhD,EGKE,CHLC,AGKAuD,EHLE,cGKP,CAAsB,IH1BH,GG0BnB,EAA+BJ,WAA/B;AHJElD,EAAAA,GAAG,EAAE,iBAtBY;AAuBjBC,EAAAA,GAAG,EAAE,oBAvBY;AAwBjBC,EAAAA,GAAG,EAAE,iBAxBY;AAyBjBC,EAAAA,GAAG,EAAE,cAzBY;AA0BjBC,EAAAA,GAAG,EAAE,cA1BY;AA2BjBC,EAAAA,GAAG,EAAE,eA3BY;AA4BjBC,EAAAA,GAAG,EAAE,eA5BY;AA6BjBC,EAAAA,GAAG,EAAE,kBA7BY;AA8BjBC,EAAAA,GAAG,EAAE,WA9BY;AA+BjBC,EAAAA,GAAG,EAAE,cA/BY;AAgCjBC,EAAAA,GAAG,EAAE,oBAhCY;AAiCjBC,EAAAA,GAAG,EAAE;AAjCY,CAAnB;;AAoCO,MAAMC,eAAe,GAAG,MAC7BC,MAAM,CAACC,OAAP,CAAepC,UAAf,EACGqC,GADH,CAEI,CAAC,CAACC,YAAD,EAAeC,YAAf,CAAD,KACG,kBAAiBD,YAAa,KAAIA,YAAa,MAAKC,YAAa,WAHxE,EAKGC,IALH,CAKQ,EALR,CADK;;;;AAQA,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,QAAT,KAC5BC,IAAI,CAACC,YAAL,CAAkB,OAAlB,EAA2B;AACzBC,EAAAA,KAAK,EAAE,UADkB;AAEzBH,EAAAA;AAFyB,CAA3B,EAGGI,MAHH,CAGUL,MAHV,CADK","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["const currencies = {\r\n  USD: 'United States Dollar',\r\n  AUD: 'Australian Dollar',\r\n  BGN: 'Bulgarian Lev',\r\n  BRL: 'Brazilian Real',\r\n  CAD: 'Canadian Dollar',\r\n  CHF: 'Swiss Franc',\r\n  CNY: 'Chinese Yuan',\r\n  CZK: 'Czech Republic Koruna',\r\n  DKK: 'Danish Krone',\r\n  GBP: 'British Pound Sterling',\r\n  HKD: 'Hong Kong Dollar',\r\n  HRK: 'Croatian Kuna',\r\n  HUF: 'Hungarian Forint',\r\n  IDR: 'Indonesian Rupiah',\r\n  ILS: 'Israeli New Sheqel',\r\n  INR: 'Indian Rupee',\r\n  ISK: 'Icelandic Krona',\r\n  JPY: 'Japanese Yen',\r\n  KRW: 'South Korean Won',\r\n  MXN: 'Mexican Peso',\r\n  MYR: 'Malaysian Ringgit',\r\n  NOK: 'Norwegian Krone',\r\n  NZD: 'New Zealand Dollar',\r\n  PHP: 'Philippine Peso',\r\n  PLN: 'Polish Zloty',\r\n  RON: 'Romanian Leu',\r\n  RUB: 'Russian Ruble',\r\n  SEK: 'Swedish Krona',\r\n  SGD: 'Singapore Dollar',\r\n  THB: 'Thai Baht',\r\n  TRY: 'Turkish Lira',\r\n  ZAR: 'South African Rand',\r\n  EUR: 'Euro',\r\n};\r\n\r\nexport const generateOptions = () =>\r\n  Object.entries(currencies)\r\n    .map(\r\n      ([currencyCode, currencyName]) =>\r\n        `<option value=\"${currencyCode}\">${currencyCode} - ${currencyName}</option>`\r\n    )\r\n    .join('');\r\n\r\nexport const formatCurrency = (amount, currency) =>\r\n  Intl.NumberFormat('en-EN', {\r\n    style: 'currency',\r\n    currency,\r\n  }).format(amount);\r\n","const endpoint = 'https://api.exchangeratesapi.io/latest';\r\n\r\nexport default async function getRatesByBase(base) {\r\n  const res = await fetch(`${endpoint}?base=${base}`);\r\n  const rates = await res.json();\r\n  return rates;\r\n}\r\n","import getRatesByBase from './api';\r\n\r\nconst ratesByBase = {};\r\n\r\nexport default async function convert(amount, from, to) {\r\n  if (!ratesByBase[from]) {\r\n    console.log(`we don't have rates for this currency, I have to fetch it!`);\r\n    const rates = await getRatesByBase(from);\r\n    ratesByBase[from] = rates;\r\n    console.log(ratesByBase);\r\n  }\r\n\r\n  const rate = ratesByBase[from].rates[to];\r\n  const converted = amount * rate;\r\n  console.log(`${amount} in ${from} is ${converted} in ${to}`);\r\n  return amount * rate;\r\n}\r\n","import { generateOptions, formatCurrency } from './currencies';\r\nimport getRatesByBase from './api';\r\nimport convert from './convert';\r\n\r\nconst fromSelect = document.querySelector('#from-currency');\r\nconst toSelect = document.querySelector('#to-currency');\r\nconst amountInput = document.querySelector('#amount-input');\r\nconst amountOutput = document.querySelector('#amount-output');\r\nconst form = document.querySelector('.converter');\r\n\r\ngetRatesByBase('PLN');\r\nconst html = generateOptions();\r\nfromSelect.innerHTML = html;\r\ntoSelect.innerHTML = html;\r\n\r\nconst displayData = async () => {\r\n  const value = await convert(\r\n    amountInput.value,\r\n    fromSelect.value,\r\n    toSelect.value\r\n  );\r\n  const formatted = formatCurrency(value, toSelect.value);\r\n  console.log(formatted);\r\n  amountOutput.textContent = `${formatted}`;\r\n};\r\n\r\nform.addEventListener('input', displayData);\r\n"]}